{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-editor/problem-editor.component.css","webpack:///./src/app/components/problem-editor/problem-editor.component.html","webpack:///./src/app/components/problem-editor/problem-editor.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/statics/statics.component.css","webpack:///./src/app/components/statics/statics.component.html","webpack:///./src/app/components/statics/statics.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { StaticsComponent } from './components/statics/statics.component'\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { ProblemEditorComponent } from './components/problem-editor/problem-editor.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginComponent } from './components/login/login.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavBarComponent,\n    StaticsComponent,\n    EditorComponent,\n    SearchPipe,\n    ProblemEditorComponent,\n    SignupComponent,\n    LoginComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { StaticsComponent } from './components/statics/statics.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: StaticsComponent },\n  { path: 'problems', component:ProblemListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'problems/:id', component: ProblemDetailComponent },\n  { path: 'newproblem', component: NewProblemComponent },\n  { path: '**', redirectTo: 'problems' }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n","module.exports = \"@media screen {\\n  #editor {\\n  height: 400px;\\n  }\\n  .lang-select {\\n  width: 100px;\\n  margin-right: 10px;\\n  }\\n  header .btn {\\n  margin: 0 5px;\\n  }\\n  footer .btn {\\n  margin: 0 5px;\\n  }\\n  .editor-footer, .editor-header {\\n  margin: 10px 0;\\n  }\\n  .cursor {\\n  /*position:absolute;*/\\n  background: rgba(0, 250, 0, 0.5);\\n  z-index: 40;\\n  width: 2px !important;\\n  }\\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <!-- for select language-->\\n    <!-- when change, call setLanguage(language)-->\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n    [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n      {{language}}\\n      </option>\\n    </select>\\n    <!--reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-\\n    target=\\\"#myModal\\\">\\n    Reset\\n    </button>\\n    <p>Current onlien people {{users}}</p>\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-\\n    labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-\\n            label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the editor, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-\\n            dismiss=\\\"modal\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n            (click)=\\\"resetEditor()\\\">Reset</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\"\\n    (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\ndeclare var ace: any;\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  public languages: string[] = ['Java', 'Python'];\n  language: string = 'Java';\n  editor: any;\n  sessionId: string;\n\n  users: string;\n  subscriptionUsers: Subscription;\n\n  defaultContent= {\n    \"Java\": `public class Example{\n      public static void main(String[] args) {\n        // Type your Java code \n      } \n    }`,\n    'Python': `class Solution:\n      def example():\n      # write your python code here.\n    `\n  }\n  constructor(private collaboration: CollaborationService,\n              private route: ActivatedRoute,\n              ) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(params => {\n        this.sessionId = params['id'];\n        console.log(this.sessionId);\n        this.initEditor();\n      })\n  }\n  initEditor() {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n    document.getElementsByTagName('textarea')[0].focus();\n    this.subscriptionUsers = this.collaboration.init(this.editor, this.sessionId)\n      .subscribe(users => this.users = users);\n    this.editor.lastAppliedChange = null;\n    // this.editor.on(\"change\", (e) => {\n    //   console.log('Editor changes: ' + JSON.stringify(e));\n    // });\n    console.log(this.users);\n  }\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());  \t\n  }\n  setLanguage(language: string): void{\n    this.language = language;\n    this.resetEditor();\n  }\n  submit(): void{\n    var userCode = this.editor.getValue();\n    console.log(userCode);\n  }\n\n}\n","module.exports = \".container {\\n  margin: auto;\\n\\n}\\n.login-panel {\\n  margin: auto;\\n  width: 40%;\\n}\\n.error-message {\\n  padding-left: 20px;\\n  color: red;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  {{diagnostic}}\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n      required\\n      [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n      required\\n      [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"getUser()\\\">Submit</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user = {\n    email: '',\n    password: ''\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n  getUser() {\n    console.log(this.user);\n  }\n  get diagnostic() { return this.user.email; }\n\n}\n","module.exports = \"nav a {\\n  justify-content: flex-start;\\n  padding: 5px 10px;;\\n  text-decoration: none;\\n  margin: 10px 5px;;\\n  display: inline-block;\\n\\n  border-radius: 4px;\\n  \\n}\\n\\n.navbar {\\n  justify-content: flex-start;\\n  margin-bottom: -1px;\\n  padding:0px;\\n}\\n\\n.bg-light {\\n  background-color: #563d7c !important;\\n\\n}\\n\\n.navbar-brand {\\n  color: white;\\n}\\n\\n.nav-link {\\n  color: #cbbde2 !important;\\n  font-size: 1.25rem;\\n}\\n\\ncontainer {\\n  margin-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/problems']\\\">All Topics</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!autherized\\\" [routerLink]=\\\"['/newproblem']\\\">Add New topic</a>\\n        </li>\\n      </ul>\\n      <div>\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <form class=\\\"form-inline my-2 my-lg-0\\\">\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [formControl]=\\\"searchBox\\\">\\n              <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n            </form>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/signup']\\\">Signup</a>\\n          </li>\\n        </ul>\\n        </div>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl }  from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\nimport { InputService } from '../../services/input.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  searchBox: FormControl = new FormControl();\n  subscription: Subscription;\n  autherized: boolean = true;\n  constructor(private input: InputService,\n              private router: Router) { }\n  ngOnInit() {\n    this.subscription = this.searchBox\n    .valueChanges\n    .pipe(debounceTime(200))\n    .subscribe(\n      term => {\n        this.input.changeInput(term);\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  searchProblem(): void {\n    this.router.navigate(['/problems']);\n  }\n}\n","module.exports = \".container {\\n  margin-top: 10px;\\n}\\n#resetBtn {\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #problemForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"problemForm.submitted\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemName\\\">Name</label>\\n        <input id=\\\"problemName\\\" name=\\\"problemName\\\" class=\\\"form-control\\\" required\\n          minlength=\\\"4\\\" appForbiddenName=\\\"bob\\\" [(ngModel)]=\\\"newProblem.name\\\" #name=\\\"ngModel\\\"\\n          placeholder=\\\"Input name here\\\">\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"name.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem description</label>\\n        <textarea name = \\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Input problem description\\\" \\n          [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\">\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"problemDifficulty\\\">Difficulty</label> \\n          <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n          [(ngModel)] = \\\"newProblem.difficulty\\\">\\n            <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n              {{difficulty}}\\n            </option>\\n          </select>\\n      </div>  \\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"problemForm.invalid\\\" (click)=\\\"addProblem()\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n    </div>\\n\\n    <div class=\\\"submitted-message\\\" *ngIf=\\\"problemForm.submitted\\\">\\n      <p>You've submitted your problem!</p>\\n      <button [routerLink]=\\\"['/problems']\\\">Check list</button>\\n    </div>\\n  </form>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model'\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM = {\n  id:0,\n  name: '',\n  desc: '',\n  difficulty: 'easy',\n  likes:0\n}\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({},DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super']\n\n  constructor(private dataService: DataService) { }\n  // problems = this.dataService.getProblems();\n  ngOnInit() {\n  }\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem);\n  }\n  resetForm() {\n    this.newProblem = Object.assign({},DEFAULT_PROBLEM)\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-sm-8 col-md-12\\\">\\n    <div>\\n      <h2>\\n        {{ problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" [routerLink]=\\\"['/problemeditor', problem.id]\\\">Edit this problem</button>\\n    </div>\\n    <div class=\\\"hidden-xs clo-sm-12 col-md-8\\\"></div>\\n    <app-editor></app-editor>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\n//import { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../../services/data.service';\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(private dataService: DataService, \n              private route: ActivatedRoute,  \n  //            private location: Location,\n              ) { }\n\n  ngOnInit() {\n    // this.route.params.subscribe(params => {\n    //   this.problem = this.dataService.getProblem(+params['id'])\n    // })\n    this.route.params.subscribe(params => {\n      this.dataService.getProblem(+params['id'])\n      .then(problem => this.problem = problem);\n    })\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #problemForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"problemForm.submitted\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemName\\\">Name</label>\\n        <input id=\\\"problemName\\\" name=\\\"problemName\\\" class=\\\"form-control\\\" required\\n          minlength=\\\"4\\\" [(ngModel)]=\\\"newProblem.name\\\" #name=\\\"ngModel\\\"\\n          value = {{problem.name}}>\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"name.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem description</label>\\n        <textarea name = \\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n          [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\" value = {{problem.desc}}>\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"problemDifficulty\\\">Difficulty</label> \\n          <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n          [(ngModel)] = \\\"newProblem.difficulty\\\">\\n            <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n              {{difficulty}}\\n            </option>\\n          </select>\\n      </div>  \\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"problemForm.invalid\\\" (click)=\\\"updateProblem()\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n    </div>\\n\\n    <div class=\\\"submitted-message\\\" *ngIf=\\\"problemForm.submitted\\\">\\n      <button [routerLink]=\\\"['/problems']\\\">Check list</button>\\n    </div>\\n  </form>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model'\nimport { DataService } from '../../services/data.service';\nimport { ActivatedRoute } from '@angular/router';\nconst DEFAULT_PROBLEM = {\n  id:0,\n  name: '',\n  desc: '',\n  difficulty: 'easy',\n  likes:0\n}\n@Component({\n  selector: 'app-problem-editor',\n  templateUrl: './problem-editor.component.html',\n  styleUrls: ['./problem-editor.component.css']\n})\nexport class ProblemEditorComponent implements OnInit {\n  problem: Problem;\n  newProblem: Problem = Object.assign({},DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super']\n\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute) { }\n  // problems = this.dataService.getProblems();\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataService.getProblem(+params['id'])\n      .then(problem => this.problem = problem);\n    })\n  }\n\n  updateProblem() {\n    this.dataService.updateProblem(this.newProblem);\n  }\n  resetForm() {\n    this.newProblem = Object.assign({},DEFAULT_PROBLEM)\n  }\n}\n","module.exports = \".difficulty, button{\\n  min-width: 100px;\\n  margin-right: 10px;\\n}\\n.badge.difficulty {\\n  padding: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #42eb76;\\n}\\n.diff-hard {\\n  background-color: #f232e3;\\n}\\n.diff-super {\\n  background-color: #f5dd3e;\\n}\\n.container {\\n  margin-top: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of (problems | search: searchTerm)\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n        {{problem.difficulty}}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { InputService } from '../../services/input.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  searchTerm: string = '';\n  subscriptionInput: Subscription;\n\n  constructor(private dataService: DataService,\n              private inputService: InputService) { }\n\n  ngOnInit() {\n    this.getProblems();\n    this.getSearchTerm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    //this.problems = this.dataService.getProblems();\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n\n  getSearchTerm(): void {\n    this.subscriptionInput = this.inputService.getInput()\n                                .subscribe(\n                                  inputTerm => this.searchTerm = inputTerm\n                                );\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    {{diagnostic}}\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.email\\\" name=\\\"email\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Confirm Password</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n          required\\n          [(ngModel)]=\\\"newUser.comfirmedPassword\\\" name=\\\"password\\\">\\n        </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"registerUser()\\\">Submit</button>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  newUser = {\n    email: '',\n    password: '',\n    comfirmedPassword: ''\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n  registerUser() {\n    console.log(this.newUser);\n  }\n}\n","module.exports = \"table {\\n  margin-top: 8px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <table class=\\\"table\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"row\\\">Problem type</th>\\n        <th>Easy</th>\\n        <th>Medium</th>\\n        <th>Hard</th>\\n        <th>Super</th>\\n        <th>Total</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr>\\n        <th scope=\\\"row\\\">Qty</th>\\n        <td>{{ this.statics.easy }}</td>\\n        <td>{{ this.statics.medium }}</td>\\n        <td>{{ this.statics.hard }}</td>\\n        <td>{{ this.statics.super }}</td>\\n        <td>{{ this.problems.length }}</td>\\n      </tr>\\n    </tbody>\\n  </table>  \\n</div>\\n<app-problem-list></app-problem-list>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Problem } from '../../models/problem.model';\nimport { Statics } from '../../models/statics.model';\nimport { Subscription } from 'rxjs';\nconst DEFAULT_STATICS = {\n  easy: 0,\n  medium: 0,\n  hard: 0,\n  super: 0\n}\n@Component({\n  selector: 'app-statics',\n  templateUrl: './statics.component.html',\n  styleUrls: ['./statics.component.css']\n})\nexport class StaticsComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n  statics: Statics = Object.assign({},DEFAULT_STATICS);\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n    this.getStatics();\n  }\n  getProblems() {\n    // this.dataService.getProblems()\n    //     .subscribe(problems => this.problems = problems);\n    this.subscriptionProblems = this.dataService.getProblems()\n    .subscribe(problems => this.problems = problems);\n  }\n  getStatics() {\n    for(let problem of this.problems) {\n      this.statics[problem.difficulty] +=1;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Problem } from '../models/problem.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems: Problem[], term: string): Problem[] {\n    return problems.filter(\n      problem => problem.name.toLowerCase().includes(term));\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  private _userScource = new Subject<string>();\n\n  collaborationSocket: any;\n  constructor() { }\n  init(editor: any, sessionId: string): Observable<string> {\n  \t// this.collaborationSocket.on(\"message\", (people) => {\n  \t// \tconsole.log('people: ' + people);\n    // })\n    this.collaborationSocket = io(window.location.origin, \n      {query: 'sessionId=' + sessionId});\n    this.collaborationSocket.on('userChange', (data:string[]) => {\n      this._userScource.next(data.toString());\n    })\n    return this._userScource.asObservable();\n  }\n}","import { Injectable } from '@angular/core';\n// import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Problem } from '../models/problem.model';\n// import { Observable, of } from 'rxjs';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n  \n  // problems: Problem[] = PROBLEMS;\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    // return of(PROBLEMS);\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n      return this._problemSource.asObservable();\n  }\n  getProblem(id: number): Promise<Problem> {\n    //return this.problems.find( (problem) => problem.id === id);\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)    \n      .catch(this.handleError);\n  }\n  addProblem(problem: Problem) {\n    // problem.id = this.problems.length + 1;\n    // this.problems.push(problem);\n    const options = {\n      headers: new HttpHeaders({\n        'constent-type': 'application/json'\n      })\n    };\n    return this.httpClient.post('api/v1/problems', problem, options)\n    .toPromise()\n    .then((res: any) => {\n      this.getProblems();\n      return res;\n    })\n    .catch(this.handleError);\n  }\n  updateProblem(problem: Problem) {\n    const options = {\n      headers: new HttpHeaders({\n        'constent-type': 'application/json'\n      })\n    };\n    return this.httpClient.put('api/v1/problems', problem, options)\n    .toPromise()\n    .then((res: any) => {\n      this.getProblems();\n      return res;\n    })\n    .catch(this.handleError);\n  }\n  private handleError(err: any): Promise<any> {\n    return Promise.reject(err.body || err);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n  private inputSubject$ = new BehaviorSubject<string>('');\n\n\n  constructor() { }\n\n  changeInput(term) {\n    this.inputSubject$.next(term);\n  }\n\n  getInput(): Observable<string> {\n    return this.inputSubject$.asObservable();\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}