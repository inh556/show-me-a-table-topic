{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/most-popular-topic/most-popular-topic.component.css","webpack:///./src/app/components/most-popular-topic/most-popular-topic.component.html","webpack:///./src/app/components/most-popular-topic/most-popular-topic.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/new-topic/new-topic.component.css","webpack:///./src/app/components/new-topic/new-topic.component.html","webpack:///./src/app/components/new-topic/new-topic.component.ts","webpack:///./src/app/components/search-results/search-results.component.css","webpack:///./src/app/components/search-results/search-results.component.html","webpack:///./src/app/components/search-results/search-results.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/topic-detail/topic-detail.component.css","webpack:///./src/app/components/topic-detail/topic-detail.component.html","webpack:///./src/app/components/topic-detail/topic-detail.component.ts","webpack:///./src/app/components/topic-editor/topic-editor.component.css","webpack:///./src/app/components/topic-editor/topic-editor.component.html","webpack:///./src/app/components/topic-editor/topic-editor.component.ts","webpack:///./src/app/components/topic-list/topic-list.component.css","webpack:///./src/app/components/topic-list/topic-list.component.html","webpack:///./src/app/components/topic-list/topic-list.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { TopicListComponent } from './components/topic-list/topic-list.component';\nimport { TopicDetailComponent } from './components/topic-detail/topic-detail.component';\nimport { routing } from './app.routes';\nimport { NewTopicComponent } from './components/new-topic/new-topic.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { TopicEditorComponent } from './components/topic-editor/topic-editor.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MostPopularTopicComponent } from './components/most-popular-topic/most-popular-topic.component';\nimport { SearchResultsComponent } from './components/search-results/search-results.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopicListComponent,\n    TopicDetailComponent,\n    NewTopicComponent,\n    NavBarComponent,\n    SearchPipe,\n    TopicEditorComponent,\n    SignupComponent,\n    LoginComponent,\n    MostPopularTopicComponent,\n    SearchResultsComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { TopicListComponent } from './components/topic-list/topic-list.component';\nimport { TopicDetailComponent } from './components/topic-detail/topic-detail.component';\nimport { NewTopicComponent } from './components/new-topic/new-topic.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { TopicEditorComponent } from './components/topic-editor/topic-editor.component'\nimport { MostPopularTopicComponent } from './components//most-popular-topic/most-popular-topic.component';\nimport { SearchResultsComponent } from './components/search-results/search-results.component';\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: MostPopularTopicComponent },\n  { path: 'topics', component:TopicListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'topics/:category', component: SearchResultsComponent },\n  { path: 'topic/:id', component: TopicDetailComponent },\n  { path: 'topic_ditor/:id', component: TopicEditorComponent },\n  { path: 'new_topic', component: NewTopicComponent },\n  { path: '**', redirectTo: 'problems' }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n","module.exports = \".container {\\n  margin: auto;\\n\\n}\\n.login-panel {\\n  margin: auto;\\n  width: 40%;\\n}\\n.error-message {\\n  padding-left: 20px;\\n  color: red;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n      required\\n      [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\n      <p *ngIf=\\\"errors\\\">{{errors.summary}}</p>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n      required\\n      [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"checkUser()\\\">Submit</button>\\n    <div class=\\\"form-group\\\"> Not a member?<a [routerLink]=\\\"['/signup']\\\">Sign up</a></div>\\n    <!-- <a href=\\\"/auth/twitter\\\">Sign in with Twitter</a> -->\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errors: {};\n  user = {\n    email: '',\n    password: ''\n  }\n  constructor(private auth: AuthService,\n              private router: Router,\n             ) { }\n\n  ngOnInit() {\n  }\n  checkUser() {\n    const email = this.user.email;\n    const password = this.user.password;\n    const request = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }\n    fetch('/auth/login', request).then(response => {\n      if (response.status === 200) {\n        this.errors = {};\n        response.json().then(json => {\n          this.auth.authenticateUser(json.token, email);\n        });\n        location.reload();\n        this.router.navigateByUrl('/'); \n      } else {\n        response.json().then(json => {\n          this.errors = json.errors ? json.error: {};\n          this.errors['summary'] = json.message;\n        })\n      }\n    } \n    )\n  }\n}\n","module.exports = \".category, button{\\n  min-width: 100px;\\n  margin-right: 10px;\\n}\\na {\\n  text-decoration: none;\\n}\\n.badge.category {\\n  padding: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-life {\\n  background-color: #42ebf4;\\n}\\n.diff-tv {\\n  background-color: #42eb76;\\n}\\n.diff-globalization {\\n  background-color: #f232e3;\\n}\\n.diff-study {\\n  background-color: #f5dd3e;\\n}\\n.container {\\n  margin-top: 10px;\\n}\\nh2 {\\n  color: saddlebrown;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Most popular topics</h2>\\n  <div class=\\\"list-group\\\">\\n    <div class=\\\"list-group-item\\\" *ngFor=\\\"let topic of (topics | search: searchTerm)\\\">\\n      <div><strong class=\\\"title\\\"> <a [routerLink]=\\\"['/topic', topic.id]\\\">{{topic.name}}</a></strong></div>\\n      <div><a title=\\\"Filter by category\\\" class=\\\"{{'pull-left badge category diff-' + topic.category.toLocaleLowerCase()}}\\\" [routerLink]=\\\"['/topics', topic.category]\\\">\\n        {{topic.category}}\\n      </a></div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Topic } from '../../models/topic.model';\nimport { DataService } from '../../services/data.service';\nimport { InputService } from '../../services/input.service';\n\n@Component({\n  selector: 'app-most-popular-topic',\n  templateUrl: './most-popular-topic.component.html',\n  styleUrls: ['./most-popular-topic.component.css']\n})\nexport class MostPopularTopicComponent implements OnInit {\n  topics: Topic[];\n  subscriptionTopic: Subscription;\n\n  searchTerm: string = '';\n  subscriptionInput: Subscription;\n\n  constructor(private dataService: DataService,\n              private inputService: InputService) { }\n\n  ngOnInit() {\n    this.getPopularTopics();\n    this.getSearchTerm();\n  }\n  ngOnDestroy() {\n    this.subscriptionTopic.unsubscribe();\n  }\n\n  getPopularTopics() {\n    this.subscriptionTopic = this.dataService.getPopularTopics()\n      .subscribe(Topics => this.topics = Topics);\n  }\n\n  getSearchTerm(): void {\n    this.subscriptionInput = this.inputService.getInput()\n                                .subscribe(\n                                  inputTerm => this.searchTerm = inputTerm\n                                );\n  }\n}","module.exports = \"nav a {\\n  justify-content: flex-start;\\n  padding: 5px 10px;;\\n  text-decoration: none;\\n  margin: 10px 5px;;\\n  display: inline-block;\\n\\n  border-radius: 4px;\\n  \\n}\\n\\n.navbar {\\n  justify-content: flex-start;\\n  margin-bottom: -1px;\\n  padding:0px;\\n}\\n\\n.bg-light {\\n  background-color: #563d7c !important;\\n\\n}\\n\\n.navbar-brand {\\n  color: white;\\n}\\n\\n.nav-link {\\n  color: #cbbde2 !important;\\n  font-size: 1.25rem;\\n}\\n\\ncontainer {\\n  margin-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/topics']\\\">All Topics</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/new_topic']\\\">Add New topic</a>\\n        </li>\\n      </ul>\\n      <div>\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <form class=\\\"form-inline my-2 my-lg-0\\\">\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [formControl]=\\\"searchBox\\\">\\n              <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\"(click)=\\\"searchTopic()\\\">Search</button>\\n            </form>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!autherized\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"!autherized\\\" [routerLink]=\\\"['/signup']\\\">Signup</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" *ngIf=\\\"user\\\">{{user}}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" *ngIf=\\\"autherized\\\" (click)=\\\"logout()\\\" [routerLink]=\\\"['/home']\\\">Logout</a>\\n            </li>\\n        </ul>\\n        </div>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl }  from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\nimport { InputService } from '../../services/input.service';\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  user: string;\n  searchBox: FormControl = new FormControl();\n  subscription: Subscription;\n  autherized: boolean;\n  constructor(private input: InputService,\n              private router: Router,\n              private auth: AuthService) { }\n  ngOnInit() {\n    this.user = this.auth.getEmail();\n    this.subscription = this.searchBox\n    .valueChanges\n    .pipe(debounceTime(200))\n    .subscribe(\n      term => {\n        this.input.changeInput(term);\n      }\n    );\n    // add child subscription practice\n    const subscription = this.auth.isUserAuthenticated()\n    .subscribe(\n      (res => {\n        this.autherized = res;\n      })\n    )\n    this.subscription.add(subscription);\n    // or simplely \n    //this.autherized = this.auth.isUserAuthenticated();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  searchTopic(): void {\n    this.router.navigate(['/topics']);\n  }\n  logout() {\n    this.autherized = !this.autherized;\n    this.user = '';\n    this.auth.deauthenticateUser();\n  }\n}\n","module.exports = \".container {\\n  margin-top: 10px;\\n}\\n#resetBtn {\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #topicForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"topicForm.submitted\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"topicName\\\">Name</label>\\n        <input id=\\\"topicName\\\" name=\\\"topicName\\\" class=\\\"form-control\\\" required\\n          minlength=\\\"4\\\" [(ngModel)]=\\\"newTopic.name\\\" #name=\\\"ngModel\\\"\\n          placeholder=\\\"Input name here\\\">\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"name.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"topicDesc\\\">Topic description</label>\\n        <textarea name = \\\"topicDesc\\\" id=\\\"topicDesc\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Input topic description\\\" \\n          [(ngModel)] = \\\"newTopic.desc\\\" rows=\\\"3\\\">\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"topicCategory\\\">Category</label> \\n          <select class=\\\"form-control\\\" id=\\\"topicCategory\\\" name=\\\"topicCategory\\\"\\n          [(ngModel)] = \\\"newTopic.category\\\">\\n            <option *ngFor = \\\"let category of categories\\\" [value] = \\\"category\\\">\\n              {{category}}\\n            </option>\\n          </select>\\n      </div>  \\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"topicForm.invalid\\\" (click)=\\\"addTopic()\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n    </div>\\n\\n    <div class=\\\"submitted-message\\\" *ngIf=\\\"topicForm.submitted\\\">\\n      <p>You've submitted your topic!</p>\\n      <button [routerLink]=\\\"['/topics']\\\">Check list</button>\\n    </div>\\n  </form>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Topic } from '../../models/topic.model'\nimport { DataService } from '../../services/data.service';\nimport { AuthService } from '../../services/auth.service';\n\nconst DEFAULT_TOPIC = {\n  id: 0,\n  name: '',\n  desc: '',\n  likes:0,\n  author:'',\n  category:''\n}\n@Component({\n  selector: 'app-new-topic',\n  templateUrl: './new-topic.component.html',\n  styleUrls: ['./new-topic.component.css']\n})\nexport class NewTopicComponent implements OnInit {\n  newTopic: Topic = Object.assign({},DEFAULT_TOPIC);\n  categories: string[] = ['tv', 'life', 'study', 'globalization']\n  constructor(private dataService: DataService,\n              private auth: AuthService) { }\n  ngOnInit() {\n    this.newTopic.author = this.auth.getEmail();\n  }\n\n  addTopic() {\n    this.dataService.addTopic(this.newTopic);\n  }\n  resetForm() {\n    this.newTopic = Object.assign({},DEFAULT_TOPIC)\n  }\n}\n","module.exports = \".category, button{\\n    min-width: 100px;\\n    margin-right: 10px;\\n}\\n.badge.category {\\n  padding: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.cate-life {\\n  background-color: #42ebf4;\\n}\\n.cate-tv {\\n  background-color: #42eb76;\\n}\\n.cate-globalization {\\n  background-color: #f232e3;\\n}\\n.cate-study {\\n  background-color: #f5dd3e;\\n}\\n.container {\\n  margin-top: 10px;\\n}\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n  <div> Filtered by <span class=\\\"{{'pull-left badge category cate-' + topics[0].category.toLocaleLowerCase()}}\\\">{{topics[0].category }}</span><button (click)=\\\"goBack()\\\">Clear</button></div>\\n  <div class=\\\"list-group\\\">\\n    <div class=\\\"list-group-item\\\" *ngFor=\\\"let topic of topics\\\">\\n      <strong class=\\\"title\\\" > <a [routerLink]=\\\"['/topic', topic.id]\\\">{{topic.name}}</a></strong>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport  { DataService } from '../../services/data.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Topic } from '../../models/topic.model';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n  topics: Topic[];\n  constructor(private dataService: DataService,\n              private location: Location,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataService.getSearchedTopics(params['category'])\n      .then(topics => this.topics = topics)\n    })\n  }\n  goBack() {\n    this.location.back();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    {{diagnostic}}\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.email\\\" name=\\\"email\\\">\\n        <!-- <p *ngIf=\\\"errors['password']\\\">Email is not correct!</p> -->\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Confirm Password</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n          required\\n          [(ngModel)]=\\\"newUser.comfirmedPassword\\\" name=\\\"password\\\">\\n        </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"registerUser()\\\">Submit</button>\\n      <div class=\\\"form-group\\\"> Already a member?<a [routerLink]=\\\"['/login']\\\">Login</a></div>\\n      <!-- <a href=\\\"/auth/google\\\">Sign In with Google</a> -->\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  errors: {};\n  newUser = {\n    email: '',\n    password: '',\n    comfirmedPassword: ''\n  }\n  constructor(private router: Router) { }\n  ngOnInit() {\n  }\n  registerUser() {\n    const email = this.newUser.email;\n    const password = this.newUser.password;\n    const confirm_password = this.newUser.comfirmedPassword;\n    if (password !== confirm_password) {\n      return;\n    }\n    const options = \n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }\n    \n    fetch('auth/signup', options).then(response => {\n      if(response.status === 200) {    \n        this.errors = {}  \n        this.router.navigateByUrl('/login');\n      } else {\n        response.json().then(json => {\n          this.errors = json.errors ? json.errors : {};\n          this.errors['summary'] = json.message;\n        })\n      }\n    })\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"topic\\\">\\n  <div class=\\\"col-sm-8 col-md-12\\\">\\n    <div>\\n      <h2>\\n        {{ topic.id}}. {{topic.name}}\\n      </h2>\\n      <p>\\n        {{topic.desc}}\\n        {{topic.likes}}\\n      </p>   \\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" *ngIf=\\\"author===topic.author\\\"[routerLink]=\\\"['/topic_ditor', topic.id]\\\">Edit this problem</button>\\n      <button (click)=\\\"goBack()\\\">Go Back</button>\\n    </div>\\n    <div class=\\\"hidden-xs clo-sm-12 col-md-8\\\"></div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Topic } from '../../models/topic.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../../services/data.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-topic-detail',\n  templateUrl: './topic-detail.component.html',\n  styleUrls: ['./topic-detail.component.css']\n})\nexport class TopicDetailComponent implements OnInit {\n  author: string;\n  topic: Topic;\n  constructor(private dataService: DataService, \n              private route: ActivatedRoute,  \n              private location: Location,\n              private auth: AuthService,\n              ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataService.getTopic(+params['id'])\n      .then(topic => this.topic = topic)\n    })\n    this.author = this.auth.getEmail();\n  }\n  goBack() {\n    this.location.back();\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #topicForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"topicForm.submitted\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"topicName\\\">Name</label>\\n        <input id=\\\"topicName\\\" name=\\\"topicName\\\" class=\\\"form-control\\\" required\\n          minlength=\\\"4\\\" [(ngModel)]=\\\"newTopic.name\\\" #name=\\\"ngModel\\\"\\n          value = {{newTopic.name}}>\\n        <div *ngIf=\\\"name.invalid && name.dirty\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"name.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"topicDesc\\\">topic description</label>\\n        <textarea name = \\\"topicDesc\\\" id=\\\"topicDesc\\\" class=\\\"form-control\\\"\\n          [(ngModel)] = \\\"newTopic.desc\\\" rows=\\\"3\\\" value = {{newTopic.desc}}>\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"topicCategory\\\">Category</label> \\n          <select class=\\\"form-control\\\" id=\\\"category\\\" name=\\\"category\\\"\\n          [(ngModel)] = \\\"newTopic.category\\\">\\n            <option *ngFor = \\\"let category of categories\\\" [value] = \\\"category\\\">\\n              {{category}}\\n            </option>\\n          </select>\\n      </div>  \\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\"  (click)=\\\"updatetopic()\\\">Submit</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n    </div>\\n\\n    <div class=\\\"submitted-message\\\" *ngIf=\\\"topicForm.submitted\\\">\\n      <button [routerLink]=\\\"['/topics']\\\">Check list</button>\\n    </div>\\n  </form>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Topic } from '../../models/topic.model'\nimport { DataService } from '../../services/data.service';\nimport { ActivatedRoute } from '@angular/router';\nconst DEFAULT_TOPIC = {\n  id: 0,\n  name: '',\n  desc: '',\n  likes:0,\n  author:'',\n  category:''\n}\n@Component({\n  selector: 'app-topic-editor',\n  templateUrl: './topic-editor.component.html',\n  styleUrls: ['./topic-editor.component.css']\n})\nexport class TopicEditorComponent implements OnInit {\n  topic: Topic;\n  newTopic: Topic = Object.assign({},DEFAULT_TOPIC);\n  categories: string[] = ['life', 'tv', 'globalization', 'study']\n\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute) { }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataService.getTopic(+params['id'])\n      .then(topic =>\n        this.newTopic = topic\n      );\n    })\n  }\n\n  updatetopic() {\n    this.dataService.updateTopic(this.newTopic);\n  }\n  resetForm() {\n    this.newTopic = Object.assign({},DEFAULT_TOPIC)\n  }\n}\n","module.exports = \".category, button{\\n  min-width: 100px;\\n  margin-right: 10px;\\n}\\n.badge.category {\\n  padding: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-life {\\n  background-color: #42ebf4;\\n}\\n.diff-tv {\\n  background-color: #42eb76;\\n}\\n.diff-globalization {\\n  background-color: #f232e3;\\n}\\n.diff-study {\\n  background-color: #f5dd3e;\\n}\\n.container {\\n  margin-top: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- <h2>Most popular topics</h2> -->\\n  <div class=\\\"list-group\\\">\\n    <div class=\\\"list-group-item\\\" *ngFor=\\\"let topic of (topics | search: searchTerm)\\\">\\n      <a title=\\\"Filter by category\\\" class=\\\"{{'pull-left badge category diff-' + topic.category.toLocaleLowerCase()}}\\\" [routerLink]=\\\"['/topics', topic.category]\\\">\\n        {{topic.category}}\\n      </a>\\n      <strong class=\\\"title\\\"> <a [routerLink]=\\\"['/topic', topic.id]\\\">{{topic.name}}</a></strong>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Topic } from '../../models/topic.model';\nimport { DataService } from '../../services/data.service';\nimport { InputService } from '../../services/input.service';\n\n@Component({\n  selector: 'app-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.css']\n})\nexport class TopicListComponent implements OnInit, OnDestroy {\n  topics: Topic[];\n  subscriptionTopic: Subscription;\n\n  searchTerm: string = '';\n  subscriptionInput: Subscription;\n\n  constructor(private dataService: DataService,\n              private inputService: InputService) { }\n\n  ngOnInit() {\n    this.getTopics();\n    this.getSearchTerm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionTopic.unsubscribe();\n  }\n\n  getTopics() {\n    this.subscriptionTopic = this.dataService.getTopics()\n      .subscribe(topics => {\n        this.topics = topics\n      });\n  }\n\n  getSearchTerm(): void {\n    this.subscriptionInput = this.inputService.getInput()\n                                .subscribe(\n                                  inputTerm => this.searchTerm = inputTerm\n                                );\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { Topic } from '../models/topic.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(topics: Topic[], term: string): Topic[] {\n    return topics.filter(\n      topic => topic.name.toLowerCase().includes(term));\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  constructor() { }\n  authenticateUser(token, email) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n  }\n  isUserAuthenticated(): Observable<boolean> {\n    return of(localStorage.getItem('token') !== null)\n  }\n\n  deauthenticateUser() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  getEmail() {\n    return localStorage.getItem('email');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Topic } from '../models/topic.model';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../services/auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _topicSource = new BehaviorSubject<Topic[]>([]);\n  constructor(private httpClient: HttpClient,\n              private auth: AuthService) { }\n\n  getTopics(): Observable<Topic[]> {\n    this.httpClient.get('api/v1/topics')\n      .toPromise()\n      .then((res: any) => {\n        this._topicSource.next(res);\n      })\n      .catch(this.handleError);\n      return this._topicSource.asObservable();\n  }\n  getPopularTopics(): Observable<Topic[]> {\n    this.httpClient.get('api/v1/popularTopics')\n      .toPromise()\n      .then((res: any) => {\n        this._topicSource.next(res);\n      })\n      .catch(this.handleError);\n      return this._topicSource.asObservable();\n  }\n  getSearchedTopics(category: string):  Promise<Topic[]> {\n     return this.httpClient.get(`api/v1/topics/${category}`)\n      .toPromise()\n      .then((res: any) => res)    \n      .catch(this.handleError);\n  }\n  getTopic(id: number): Promise<Topic> {\n    return this.httpClient.get(`api/v1/topic/${id}`)\n      .toPromise()\n      .then((res: any) => res)    \n      .catch(this.handleError);\n  }\n  addTopic(topic: Topic) {\n    const options = {\n      headers: new HttpHeaders({\n        'constent-type': 'application/json',\n        'Authorization': 'bearer ' + this.auth.getToken()\n      })\n    };\n    return this.httpClient.post('editor/topics', topic, options)\n    .toPromise()\n    .then((res: any) => {\n      return res;\n    })\n    .catch(this.handleError);\n  }\n  updateTopic(topic: Topic) {\n    const options = {\n      headers: new HttpHeaders({\n        'constent-type': 'application/json',\n        'Authorization': 'bearer ' + this.auth.getToken()\n      })\n    };\n    return this.httpClient.put('editor/topics', topic, options)\n    .toPromise()\n    .then((res: any) => {\n      return res;\n    })\n    .catch(this.handleError);\n  }\n  private handleError(err: any): Promise<any> {\n    return Promise.reject(err.body || err);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n  private inputSubject$ = new BehaviorSubject<string>('');\n\n\n  constructor() { }\n\n  changeInput(term) {\n    this.inputSubject$.next(term);\n  }\n\n  getInput(): Observable<string> {\n    return this.inputSubject$.asObservable();\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}